{
    announcements {
        "id": "1",
        "title": "announcement A",
        "description": "First Announcement",
        "date": 2023-04-25

    },
       events {
          "id": "1",
        "title": "events A",
        "description": "First events",
        "date": 2023-04-25
    },
       resources {
        "id": "1",
        "title": "resource A",
        "description": "The first resources"
    },
       newsletters {
        "id": "",
        "title": "",
        "number": "",
        "htmlData": ""
        "date":""
    },
       videos {
        "id": "",
        "title": "",
        "url": "",
        "date":""
    }
}


//// /// new admin section

router.post("/newAdmin", async (req, res, next) => {
  try {
    const newAdmin = await Admin.create({
      email: req.body.email,
      password: req.body.password,
      passwordConfirm: req.body.passwordConfirm,
    });

    const token = signToken(newAdmin._id);
    const cookieOptions = {
      expires: new Date(
        Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 60 * 60 * 1000
      ),
      httpOnly: true,
    };
    if (process.env.NODE_ENV === "production") cookieOptions.secure = true;
    res.cookie("jwt", token, cookieOptions);
    // remove password from output
    newAdmin.password = undefined;

    res.status(201).json({
      status: "success",
      data: newAdmin,
    });
  } catch (err) {
    res.status(400).json({
      status: "fail",
      data: err,
    });
  }
});